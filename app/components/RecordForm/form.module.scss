@import '../../styles/variables';
@import '../../styles/mixins';

.form {
  height: 200px;
  display: grid;
  grid-template-columns: 300px auto 300px;
  grid-template-areas: ". form stats";
  font-family: $roboto;
  .label_container {
    grid-area: form;
    width: 500px;
    justify-self: center;
    align-self: end;
    @include flex(normal, normal, column);
    gap: 0.5rem;
    label {
      font-size: 1.5rem;
      padding-bottom: 1rem;
    }
  }
  .message {
    width: 200px;
    visibility: hidden;
    @include flex(space-between);
    font-size: 0.8rem;
    font-weight: 300;
    font-style: italic;
    letter-spacing: 1px;
  }
  .input_container {
    display: flex;
    gap: 15px;
    input[type=text] {
      box-sizing: border-box;
      flex-grow: 1;
      outline-width: 2px;
      padding: 9px 0.5rem;
      border: 1px solid $input-border-color;
      border-radius: 0.375rem;
      font-size: 1rem;
    }
    input[type=text]:focus {
      outline: 2px solid $main-blue-color;
    }
    input[type=text]::placeholder {
      font-size: 0.9rem;
    }
  }
  .input_container:has(input[type=text]:focus) + .message {
    visibility: visible;
  }
  .max_length {
    color: $red-color;
  }
  button {
    background-color: $main-blue-color;
    color: $white-color;
    border: none;
    border-radius: 0.375rem;
    line-height: 1.25rem;
    padding-inline: 1rem;
    cursor: pointer;
  }
}

@media only screen and (max-width: 1200px) {
  .form {
    padding-top: 1rem;
    height: unset;
    @include flex(normal, center, column-reverse);
    gap: 20px;
    .label_container {
      align-self: unset;
      justify-self: unset;
    }
  }
}

@media only screen and (max-width: 768px) {
  .form {
    .label_container {
      width: 450px;
    }
  }
}

@media only screen and (max-width: 480px) {
  .form {
    padding-inline: 1rem;
    .label_container {
      width: 100%;
      label {
        font-size: 1.2rem;
        padding-bottom: 0.5rem;
      }
    }
    button {
      font-size: 0.9rem;
      padding-inline: 0.5rem;
      cursor: pointer;
    }
  }
}